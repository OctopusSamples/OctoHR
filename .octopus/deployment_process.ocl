step "approve-production-deployment" {
    condition = "Variable"
    name = "Approve Deployment for production"
    properties = {
        Octopus.Step.ConditionVariableExpression = "#{unless Octopus.Deployment.Trigger.Name}True#{/unless}"
    }

    action {
        action_type = "Octopus.Manual"
        environments = ["production"]
        notes = "Only runs in **Production**."
        properties = {
            Octopus.Action.Manual.BlockConcurrentDeployments = "False"
            Octopus.Action.Manual.Instructions = "Please confirm OctoHR is ok to deploy to Production"
            Octopus.Action.RunOnServer = "false"
        }
        worker_pool_variable = ""
    }
}

step "azure-web-app-get-deployment-user" {
    name = "Azure Web App - Get Deployment User"

    action {
        properties = {
            AzWebApp.DeploymentCreds.AzAccount = "#{Azure.Account}"
            AzWebApp.DeploymentCreds.AzResourceGroup = "#{Project.Azure.ResourceGroup.Name}"
            AzWebApp.DeploymentCreds.AzWebAppName = "#{Project.OctoHR.WebApp.Name}"
            AzWebApp.DeploymentCreds.PublishCredentialType = "MSDeploy"
            Octopus.Action.Template.Id = "ActionTemplates-1724"
            Octopus.Action.Template.Version = "1"
        }
        worker_pool_variable = "Project.Worker.Pool"

        container {
            feed = "docker-feed-tf"
            image = "octopuslabs/azure-workertools:2.28.0"
        }
    }
}

step "azure-web-app-enable-app-offline" {
    name = "Azure Web App - Enable app_offline"

    action {
        properties = {
            AzWebApp.EnableAppOffline.AzWebAppName = "#{Project.OctoHR.WebApp.Name}"
            AzWebApp.EnableAppOffline.Deployment.KuduRestApiUrl = "https://#{AzWebApp.EnableAppOffline.AzWebAppName}.scm.azurewebsites.net/api/vfs"
            AzWebApp.EnableAppOffline.Deployment.Password = "#{Octopus.Action[Azure Web App - Get Deployment User].Output.userPWD}"
            AzWebApp.EnableAppOffline.Deployment.Username = "#{Octopus.Action[Azure Web App - Get Deployment User].Output.userName}"
            AzWebApp.EnableAppOffline.Filename = "app_offline.htm"
            AzWebApp.EnableAppOffline.SourcePackage = "{\"PackageId\":\"OctoHR.PublicWebApp.AppOffline\",\"FeedId\":\"octopus-server-built-in\"}"
            Octopus.Action.Template.Id = "ActionTemplates-1725"
            Octopus.Action.Template.Version = "1"
        }
        worker_pool_variable = "Project.Worker.Pool"

        packages "AzWebApp.EnableAppOffline.SourcePackage" {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "OctoHR.PublicWebApp.AppOffline"
            properties = {
                Extract = "True"
                PackageParameterName = "AzWebApp.EnableAppOffline.SourcePackage"
                SelectionMode = "deferred"
            }
        }
    }
}

step "deploy-octohr-config-db-migrator" {
    name = "Deploy OctoHR Config DB Migrator"

    action {
        action_type = "Octopus.Script"
        properties = {
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "octopus-server-built-in"
            Octopus.Action.Package.PackageId = "OctoHR.ConfigDbMigrator"
            Octopus.Action.Script.ScriptFileName = "OctoHR.ConfigDBMigrator.Deploy.ps1"
            Octopus.Action.Script.ScriptSource = "Package"
        }
        worker_pool = "hosted-windows"

        packages {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "OctoHR.ConfigDbMigrator"
            properties = {
                SelectionMode = "immediate"
            }
        }
    }
}

step "confirm-config-db-migration" {
    condition = "Variable"
    name = "Confirm Config DB migration"
    properties = {
        Octopus.Step.ConditionVariableExpression = "#{unless Octopus.Deployment.Error}#{unless Octopus.Deployment.Trigger.Name}True#{/unless}#{/unless}"
    }

    action {
        action_type = "Octopus.Manual"
        notes = ""
        properties = {
            Octopus.Action.Manual.BlockConcurrentDeployments = "False"
            Octopus.Action.Manual.Instructions = "Please confirm OctoHR Config DB is migrated as expected."
            Octopus.Action.RunOnServer = "false"
        }
        worker_pool_variable = ""
    }
}

step "deploy-octohr-publicwebapp" {
    name = "Deploy OctoHR PublicWebApp"
    properties = {
        Octopus.Action.TargetRoles = "OctoHR-Web"
    }

    action {
        action_type = "Octopus.AzureAppService"
        properties = {
            Octopus.Action.Azure.DeploymentType = "Package"
            Octopus.Action.EnabledFeatures = "Octopus.Features.JsonConfigurationVariables,Octopus.Features.ConfigurationTransforms,Octopus.Features.SubstituteInFiles"
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "octopus-server-built-in"
            Octopus.Action.Package.JsonConfigurationVariablesTargets = "**\\appsettings.json"
            Octopus.Action.Package.PackageId = "OctoHR.PublicWebApp"
            Octopus.Action.RunOnServer = "false"
            OctopusUseBundledTooling = "False"
        }
        worker_pool_variable = ""

        packages {
            acquisition_location = "Server"
            feed = "octopus-server-built-in"
            package_id = "OctoHR.PublicWebApp"
            properties = {
                SelectionMode = "immediate"
            }
        }
    }
}

step "azure-web-app-disable-app-offline" {
    name = "Azure Web App - Disable app_offline"

    action {
        properties = {
            AzWebApp.DisableAppOffline.AzWebAppName = "#{Project.OctoHR.WebApp.Name}"
            AzWebApp.DisableAppOffline.Deployment.KuduRestApiUrl = "https://#{AzWebApp.DisableAppOffline.AzWebAppName}.scm.azurewebsites.net/api/vfs"
            AzWebApp.DisableAppOffline.Deployment.Password = "#{Octopus.Action[Azure Web App - Get Deployment User].Output.userPWD}"
            AzWebApp.DisableAppOffline.Deployment.Username = "#{Octopus.Action[Azure Web App - Get Deployment User].Output.userName}"
            AzWebApp.DisableAppOffline.Filename = "app_offline.htm"
            Octopus.Action.Template.Id = "ActionTemplates-1726"
            Octopus.Action.Template.Version = "1"
        }
        worker_pool_variable = "Project.Worker.Pool"
    }
}